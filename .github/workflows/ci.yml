name: CI

on:
  pull_request:
  push:
    branches:
      - main

env:
  crystal_version: 1.4.1
  shards_version: 0.17.0
  gc_version: 8.2.0
  llvm_version: 13

jobs:
  alpine:
    name: Alpine container
    runs-on: ubuntu-latest
    strategy:
      matrix:
        alpine_version:
          - latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: alpine
          cache-from: type=gha
          cache-to: type=gha,mode=max
          pull: true
          platforms: linux/amd64,linux/arm64
          build-args: |
            crystal_version=${{ env.crystal_version }}
            shards_version=${{ env.shards_version }}
            alpine_version=${{ matrix.alpine_version }}
            gc_version=${{ env.gc_version }}
            llvm_version=${{ env.llvm_version }}
          tags: |
            84codes/crystal:${{ env.crystal_version }}-alpine-${{ matrix.alpine_version }}
            84codes/crystal:${{ env.crystal_version }}-alpine
            84codes/crystal:latest-alpine
            84codes/crystal:latest
          push: ${{ github.ref == 'refs/heads/main' }}

  pkgs:
    name: Debian/rpm packages
    needs: alpine
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2
      - name: Build packages
        uses: docker/build-push-action@v3
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: pkgs
          pull: true
          platforms: linux/amd64,linux/arm64
          build-args: |
            crystal_version=${{ env.crystal_version }}
            pkg_revision=${{ github.run_number }}
          tags: |
            84codes/crystal:latest-pkgs
            84codes/crystal:${{ env.crystal_version }}-pkgs
          push: ${{ github.ref == 'refs/heads/main' }}
          outputs: pkgs
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: crystal_packages
          path: pkgs
      - name: Upload deb package to Packagecloud
        run: find pkgs -name "*.deb" -exec curl -fsSu "${{ secrets.packagecloud_token }}:" -F "package[distro_version_id]=35" -F "package[package_file]=@{}" -XPOST https://packagecloud.io/api/v1/repos/84codes/crystal/packages.json \;
        if: github.ref == 'refs/heads/main'
      - name: Upload rpm package to Packagecloud
        run: find pkgs -name "*.rpm" -exec curl -fsSu "${{ secrets.packagecloud_token }}:" -F "package[distro_version_id]=227" -F "package[package_file]=@{}" -XPOST https://packagecloud.io/api/v1/repos/84codes/crystal/packages.json \;
        if: github.ref == 'refs/heads/main'

  debian:
    name: Debian container
    needs: pkgs
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - base_image: ubuntu
            base_image_tag: 22.04
            base_image_tag_alias: jammy
          - base_image: ubuntu
            base_image_tag: 20.04
            base_image_tag_alias: focal
          - base_image: ubuntu
            base_image_tag: 18.04
            base_image_tag_alias: bionic
          - base_image: debian
            base_image_tag: 10
            base_image_tag_alias: buster
          - base_image: debian
            base_image_tag: 11
            base_image_tag_alias: bullseye
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: debian
          cache-from: type=gha
          cache-to: type=gha,mode=max
          pull: true
          platforms: linux/amd64,linux/arm64
          build-args: |
            crystal_version=${{ env.crystal_version }}
            gc_version=${{ env.gc_version }}
            base_image=${{ matrix.base_image }}
            base_image_tag=${{ matrix.base_image_tag }}
          tags: |
            84codes/crystal:${{ env.crystal_version }}-${{ matrix.base_image }}-${{ matrix.base_image_tag }}
            84codes/crystal:latest-${{ matrix.base_image }}-${{ matrix.base_image_tag }}
            84codes/crystal:${{ env.crystal_version }}-${{ matrix.base_image }}-${{ matrix.base_image_tag_alias }}
            84codes/crystal:latest-${{ matrix.base_image }}-${{ matrix.base_image_tag_alias }}
          push: ${{ github.ref == 'refs/heads/main' }}

  fedora:
    name: Fedora container
    needs: pkgs
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - base_image: fedora
            base_image_tag: 34
          - base_image: fedora
            base_image_tag: 35
          - base_image: fedora
            base_image_tag: 36
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: fedora
          cache-from: type=gha
          cache-to: type=gha,mode=max
          pull: true
          platforms: linux/amd64,linux/arm64
          build-args: |
            crystal_version=${{ env.crystal_version }}
            gc_version=${{ env.gc_version }}
            base_image=${{ matrix.base_image }}
            base_image_tag=${{ matrix.base_image_tag }}
          tags: |
            84codes/crystal:${{ env.crystal_version }}-${{ matrix.base_image }}-${{ matrix.base_image_tag }}
            84codes/crystal:latest-${{ matrix.base_image }}-${{ matrix.base_image_tag }}
          push: ${{ github.ref == 'refs/heads/main' }}

