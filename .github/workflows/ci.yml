name: CI

on:
  pull_request:
  push:
    branches:
      - main
    paths-ignore:
      - README.md

env:
  crystal_version: 1.4.1
  shards_version: 0.17.0
  gc_version: 8.2.0
  llvm_version: 13

jobs:
  alpine:
    name: Alpine container
    runs-on: ubuntu-latest
    strategy:
      matrix:
        alpine_version:
          - latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: alpine
          cache-from: type=gha
          cache-to: type=gha,mode=max
          pull: true
          platforms: linux/amd64,linux/arm64
          build-args: |
            crystal_version=${{ env.crystal_version }}
            shards_version=${{ env.shards_version }}
            alpine_version=${{ matrix.alpine_version }}
            gc_version=${{ env.gc_version }}
            llvm_version=${{ env.llvm_version }}
          tags: |
            84codes/crystal:${{ env.crystal_version }}-alpine-${{ matrix.alpine_version }}
            84codes/crystal:${{ env.crystal_version }}-alpine
            84codes/crystal:latest-alpine
            84codes/crystal:latest
          push: ${{ github.ref == 'refs/heads/main' }}

  debian:
    name: Debian
    needs: alpine
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - base_image: ubuntu
            base_image_tag: 22.04
            base_image_tag_alias: jammy
          - base_image: ubuntu
            base_image_tag: 20.04
            base_image_tag_alias: focal
          - base_image: debian
            base_image_tag: 10
            base_image_tag_alias: buster
          - base_image: debian
            base_image_tag: 11
            base_image_tag_alias: bullseye
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push container
        uses: docker/build-push-action@v3
        with:
          context: debian
          cache-from: type=gha
          cache-to: type=gha,mode=max
          pull: true
          platforms: linux/amd64,linux/arm64
          build-args: |
            crystal_version=${{ env.crystal_version }}
            gc_version=${{ env.gc_version }}
            base_image=${{ matrix.base_image }}
            base_image_tag=${{ matrix.base_image_tag }}
          tags: |
            84codes/crystal:${{ env.crystal_version }}-${{ matrix.base_image }}-${{ matrix.base_image_tag }}
            84codes/crystal:latest-${{ matrix.base_image }}-${{ matrix.base_image_tag }}
            84codes/crystal:${{ env.crystal_version }}-${{ matrix.base_image }}-${{ matrix.base_image_tag_alias }}
            84codes/crystal:latest-${{ matrix.base_image }}-${{ matrix.base_image_tag_alias }}
          push: ${{ github.ref == 'refs/heads/main' }}
      - name: Export packages
        uses: docker/build-push-action@v3
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: debian
          platforms: linux/amd64,linux/arm64
          build-args: |
            crystal_version=${{ env.crystal_version }}
            gc_version=${{ env.gc_version }}
            base_image=${{ matrix.base_image }}
            base_image_tag=${{ matrix.base_image_tag }}
            pkg_revision=${{ github.run_number }}
          target: pkgs
          outputs: pkgs
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.base_image }}-${{ matrix.base_image_tag }}-pkgs
          path: pkgs
      - name: Upload to Packagecloud
        run: |
          set -eux
          curl -fsSO -u "${{ secrets.packagecloud_token }}:" https://packagecloud.io/api/v1/distributions.json
          DIST_ID=$(jq ".deb[] | select(.index_name == \"${{ matrix.base_image }}\").versions[] | select(.index_name == \"${{ matrix.base_image_tag }}\").id" distributions.json)
          find pkgs -name "*.deb" -exec curl -fsSu "${{ secrets.packagecloud_token }}:" -F "package[distro_version_id]=$DIST_ID" -F "package[package_file]=@{}" -XPOST https://packagecloud.io/api/v1/repos/84codes/crystal/packages.json \;
        if: ${{ github.ref == 'refs/heads/main' }}
      - name: Upload to cloudsmith
        uses: cloudsmith-io/action@master
        with:
          api-key: ${{ secrets.CLOUDSMITH_API_KEY }}
          command: push
          format: deb
          owner: 84codes
          repo: crystal
          distro: ${{ matrix.base_image }}
          release: ${{ matrix.base_image_tag }}
          republish: true
          file: pkgs/linux_amd64/crystal_${{ env.version }}-${{ github.run_number }}_amd64.deb
      - name: Upload to cloudsmith
        uses: cloudsmith-io/action@master
        with:
          api-key: ${{ secrets.CLOUDSMITH_API_KEY }}
          command: push
          format: deb
          owner: 84codes
          repo: crystal
          distro: ${{ matrix.base_image }}
          release: ${{ matrix.base_image_tag }}
          republish: true
          file: pkgs/linux_arm64/crystal_${{ env.version }}-${{ github.run_number }}_arm64.deb

  fedora:
    name: Fedora
    needs: alpine
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - base_image: fedora
            base_image_tag: 34
          - base_image: fedora
            base_image_tag: 35
          - base_image: fedora
            base_image_tag: 36
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push container
        uses: docker/build-push-action@v3
        with:
          context: fedora
          cache-from: type=gha
          cache-to: type=gha,mode=max
          pull: true
          platforms: linux/amd64,linux/arm64
          build-args: |
            crystal_version=${{ env.crystal_version }}
            gc_version=${{ env.gc_version }}
            base_image=${{ matrix.base_image }}
            base_image_tag=${{ matrix.base_image_tag }}
            pkg_revision=${{ github.run_number }}
          tags: |
            84codes/crystal:${{ env.crystal_version }}-${{ matrix.base_image }}-${{ matrix.base_image_tag }}
            84codes/crystal:latest-${{ matrix.base_image }}-${{ matrix.base_image_tag }}
          push: ${{ github.ref == 'refs/heads/main' }}
      - name: Export packages
        uses: docker/build-push-action@v3
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: fedora
          platforms: linux/amd64,linux/arm64
          build-args: |
            crystal_version=${{ env.crystal_version }}
            gc_version=${{ env.gc_version }}
            base_image=${{ matrix.base_image }}
            base_image_tag=${{ matrix.base_image_tag }}
            pkg_revision=${{ github.run_number }}
          target: pkgs
          outputs: pkgs
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.base_image }}-${{ matrix.base_image_tag }}-pkgs
          path: pkgs
      - name: Upload to Packagecloud
        run: |
          DIST_ID=$(curl -fsSu "${{ secrets.packagecloud_token }}:" https://packagecloud.io/api/v1/distributions.json | jq ".rpm[] | select(.index_name == \"${{ matrix.base_image }}\").versions[] | select(.index_name == \"${{ matrix.base_image_tag }}\").id" distributions.json)
          find pkgs -name "*.rpm" -exec curl -fsSu "${{ secrets.packagecloud_token }}:" -F "package[distro_version_id]=$DIST_ID" -F "package[package_file]=@{}" -XPOST https://packagecloud.io/api/v1/repos/84codes/crystal/packages.json \;
        if: ${{ github.ref == 'refs/heads/main' }}
      - name: Upload to cloudsmith
        uses: cloudsmith-io/action@master
        with:
          api-key: ${{ secrets.CLOUDSMITH_API_KEY }}
          command: push
          format: rpm
          owner: 84codes
          repo: crystal
          distro: ${{ matrix.base_image }}
          release: ${{ matrix.base_image_tag }}
          republish: true
          file: pkgs/linux_amd64/crystal-${{ env.version }}-${{ github.run_number }}.x86_64.rpm
      - name: Upload to cloudsmith
        uses: cloudsmith-io/action@master
        with:
          api-key: ${{ secrets.CLOUDSMITH_API_KEY }}
          command: push
          format: rpm
          owner: 84codes
          repo: crystal
          distro: ${{ matrix.base_image }}
          release: ${{ matrix.base_image_tag }}
          republish: true
          file: pkgs/linux_arm64/crystal-${{ env.version }}-${{ github.run_number }}.aarch64.rpm
