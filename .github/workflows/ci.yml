name: CI

on:
  pull_request:
  push:
    branches:
      - main
    paths-ignore:
      - README.md

env:
  crystal_version: 1.6.1
  shards_version: 0.17.1
  gc_version: 8.2.2

jobs:
  alpine:
    name: Alpine container
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - alpine_version: latest
            llvm_version: 13
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: alpine
          cache-from: type=gha,scope=container-alpine-${{ matrix.alpine_version }}
          cache-to: type=gha,mode=max,scope=container-alpine-${{ matrix.alpine_version }}
          pull: true
          platforms: linux/amd64,linux/arm64
          build-args: |
            crystal_version=${{ env.crystal_version }}
            shards_version=${{ env.shards_version }}
            gc_version=${{ env.gc_version }}
            llvm_version=${{ matrix.llvm_version }}
            alpine_version=${{ matrix.alpine_version }}
          tags: |
            84codes/crystal:${{ env.crystal_version }}-alpine-${{ matrix.alpine_version }}
            84codes/crystal:${{ env.crystal_version }}-alpine
            84codes/crystal:latest-alpine
            84codes/crystal:latest
          push: ${{ github.ref == 'refs/heads/main' }}

  pkgs:
    name: Debian/RPM static packages
    needs: alpine
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Export packages
        uses: docker/build-push-action@v3
        with:
          cache-from: type=gha,scope=static-pkgs
          cache-to: type=gha,mode=max,scope=static-pkgs
          context: pkgs
          platforms: linux/amd64,linux/arm64
          build-args: |
            crystal_version=${{ env.crystal_version }}
            pkg_revision=${{ github.run_number }}
          outputs: pkgs
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: crystal-static-pkgs
          path: pkgs
      - name: Upload deb package to Packagecloud
        run: find pkgs -name "*.deb" -exec curl -fsSu "${{ secrets.packagecloud_token }}:" -F "package[distro_version_id]=35" -F "package[package_file]=@{}" -XPOST https://packagecloud.io/api/v1/repos/84codes/crystal/packages.json \;
        if: github.ref == 'refs/heads/main'
      - name: Upload RPM package to Packagecloud
        run: find pkgs -name "*.rpm" -exec curl -fsSu "${{ secrets.packagecloud_token }}:" -F "package[distro_version_id]=227" -F "package[package_file]=@{}" -XPOST https://packagecloud.io/api/v1/repos/84codes/crystal/packages.json \;
        if: github.ref == 'refs/heads/main'

  debian:
    name: Debian
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - base_image: ubuntu
            version: 22.04
            codename: jammy
            llvm_version: 14
          - base_image: ubuntu
            version: 20.04
            codename: focal
            llvm_version: 12
          - base_image: ubuntu
            version: 18.04
            codename: bionic
            llvm_version: 10
          - base_image: debian
            version: 11
            codename: bullseye
            llvm_version: 13
          - base_image: debian
            version: 10
            codename: buster
            llvm_version: 13
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push container
        uses: docker/build-push-action@v3
        with:
          context: debian
          cache-from: type=gha,scope=container-${{ matrix.base_image }}-${{ matrix.version }}
          cache-to: type=gha,mode=max,scope=container-${{ matrix.base_image }}-${{ matrix.version }}
          pull: true
          platforms: linux/amd64,linux/arm64
          build-args: |
            crystal_version=${{ env.crystal_version }}
            gc_version=${{ env.gc_version }}
            base_image=${{ matrix.base_image }}
            codename=${{ matrix.codename }}
            llvm_version=${{ matrix.llvm_version }}
          tags: |
            84codes/crystal:${{ env.crystal_version }}-${{ matrix.base_image }}-${{ matrix.version }}
            84codes/crystal:latest-${{ matrix.base_image }}-${{ matrix.version }}
            84codes/crystal:${{ env.crystal_version }}-${{ matrix.base_image }}-${{ matrix.codename }}
            84codes/crystal:latest-${{ matrix.base_image }}-${{ matrix.codename }}
          push: ${{ github.ref == 'refs/heads/main' }}
      - name: Export packages
        uses: docker/build-push-action@v3
        with:
          cache-from: type=gha,scope=container-${{ matrix.base_image }}-${{ matrix.version }}
          cache-to: type=gha,mode=max,scope=container-${{ matrix.base_image }}-${{ matrix.version }}
          context: debian
          platforms: linux/amd64,linux/arm64
          build-args: |
            crystal_version=${{ env.crystal_version }}
            gc_version=${{ env.gc_version }}
            base_image=${{ matrix.base_image }}
            codename=${{ matrix.codename }}
            llvm_version=${{ matrix.llvm_version }}
            pkg_revision=${{ github.run_number }}
          target: pkgs
          outputs: pkgs
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: crystal-${{ matrix.base_image }}-${{ matrix.version }}-pkgs
          path: pkgs
      - name: Upload to Packagecloud
        run: |
          set -euxo pipefail
          curl -fsSO -u "${{ secrets.packagecloud_token }}:" https://packagecloud.io/api/v1/distributions.json
          DIST_ID=$(jq ".deb[] | select(.index_name == \"${{ matrix.base_image }}\").versions[] | select(.index_name == \"${{ matrix.codename }}\").id" distributions.json)
          find pkgs -name "*.deb" | xargs -I{} curl -fsSu "${{ secrets.packagecloud_token }}:" -F "package[distro_version_id]=$DIST_ID" -F "package[package_file]=@{}" -XPOST https://packagecloud.io/api/v1/repos/84codes/crystal/packages.json
        if: ${{ github.ref == 'refs/heads/main' }}

  fedora:
    name: Fedora
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - base_image: fedora
            base_image_tag: 35
          - base_image: fedora
            base_image_tag: 36
          - base_image: fedora
            base_image_tag: 37
            llvm_version: 14
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push container
        uses: docker/build-push-action@v3
        with:
          context: fedora
          cache-from: type=gha,scope=container-${{ matrix.base_image }}-${{ matrix.base_image_tag }}
          cache-to: type=gha,mode=max,scope=container-${{ matrix.base_image }}-${{ matrix.base_image_tag }}
          pull: true
          platforms: linux/amd64,linux/arm64
          build-args: |
            crystal_version=${{ env.crystal_version }}
            gc_version=${{ env.gc_version }}
            llvm_version=${{ matrix.llvm_version }}
            base_image=${{ matrix.base_image }}
            base_image_tag=${{ matrix.base_image_tag }}
            pkg_revision=${{ github.run_number }}
          tags: |
            84codes/crystal:${{ env.crystal_version }}-${{ matrix.base_image }}-${{ matrix.base_image_tag }}
            84codes/crystal:latest-${{ matrix.base_image }}-${{ matrix.base_image_tag }}
          push: ${{ github.ref == 'refs/heads/main' }}
      - name: Export packages
        uses: docker/build-push-action@v3
        with:
          cache-from: type=gha,scope=container-${{ matrix.base_image }}-${{ matrix.base_image_tag }}
          cache-to: type=gha,mode=max,scope=container-${{ matrix.base_image }}-${{ matrix.base_image_tag }}
          context: fedora
          platforms: linux/amd64,linux/arm64
          build-args: |
            crystal_version=${{ env.crystal_version }}
            gc_version=${{ env.gc_version }}
            llvm_version=${{ matrix.llvm_version }}
            base_image=${{ matrix.base_image }}
            base_image_tag=${{ matrix.base_image_tag }}
            pkg_revision=${{ github.run_number }}
          target: pkgs
          outputs: pkgs
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: crystal-${{ matrix.base_image }}-${{ matrix.base_image_tag }}-pkgs
          path: pkgs
      - name: Upload to Packagecloud
        run: |
          set -euxo pipefail
          DIST_ID=$(curl -fsSu "${{ secrets.packagecloud_token }}:" https://packagecloud.io/api/v1/distributions.json | jq ".rpm[] | select(.index_name == \"${{ matrix.base_image }}\").versions[] | select(.index_name == \"${{ matrix.base_image_tag }}\").id")
          find pkgs -name "*.rpm" | xargs -I{} curl -fsSu "${{ secrets.packagecloud_token }}:" -F "package[distro_version_id]=$DIST_ID" -F "package[package_file]=@{}" -XPOST https://packagecloud.io/api/v1/repos/84codes/crystal/packages.json
        if: ${{ github.ref == 'refs/heads/main' }}
