name: Docker images

on:
  push:
    branches:
      - 'main'
  schedule:
    - cron: '30 4 * * *' # every day at 4.30 am

env:
  crystal_version: 1.1.1
  shards_version: 0.15.0

jobs:
  alpine:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        alpine_version:
          - latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: alpine
          platforms: linux/amd64,linux/arm64
          build-args: |
            crystal_version=${{ env.crystal_version }}
            shards_version=${{ env.shards_version }}
            alpine_version=${{ matrix.alpine_version }}
          tags: 84codes/crystal:${{ env.crystal_version }}-alpine-${{ matrix.alpine_version }}
          push: true

  debian:
    needs: alpine
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - base_image: ubuntu
            base_image_tag: 20.04
          - base_image: ubuntu
            base_image_tag: 18.04
          - base_image: debian
            base_image_tag: buster
          - base_image: debian
            base_image_tag: bullseye
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: debian
          platforms: linux/amd64,linux/arm64
          build-args: |
            crystal_version=${{ env.crystal_version }}
            base_image=${{ matrix.base_image }}
            base_image_tag=${{ matrix.base_image_tag }}
          tags: 84codes/crystal:${{ env.crystal_version }}-${{ matrix.base_image }}-${{ matrix.base_image_tag }}
          push: true
